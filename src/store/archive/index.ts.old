import Vue from 'vue'
import Vuex from 'vuex'
import { RootState } from './types'
import { inputs } from './inputs'
import { unitAssignment } from './units'
import { snaps } from './snaps'

Vue.use(Vuex)

export default new Vuex.Store<RootState>({
  state: {
    units: 'metric',
    snapType: {
      text: 'Tapered Snap 1',
      disabled: false,
      image: '1.jpg',
      id: 1,
      requiresInputs: [
        1, 3
      ]
    },
    results: "na"
  },
  inputs:{},
  modules:{
    snaps,
    unitAssignment,
    inputs
  },
  mutations: {
    updateSnapType (state, type) {
      state.snapType = type
    }
  },
  actions: {
  },
  getters: {
    activeInputs (state) {
      const activeInputs: Array<object> = []
      state.snapType.requiresInputs.forEach(function (inputId: number) {
        const newActiveInput = state.inputs.find((matchedInput) => matchedInput.id === inputId)
        if (newActiveInput) activeInputs.push(newActiveInput)
      })
      return activeInputs
    }
  }
})
